// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripCostCalculator.DbContexts;

#nullable disable

namespace TripCostCalculator.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20220325135710_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TripCostCalculator.Models.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarTypes");
                });

            modelBuilder.Entity("TripCostCalculator.Models.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("TripCostCalculator.Models.SubscriptionCarTypePrice", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<int>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PricePerHour")
                        .HasColumnType("int");

                    b.Property<int>("PricePerKm")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId", "CarTypeId");

                    b.HasIndex("CarTypeId");

                    b.ToTable("SubscriptionCarTypePrices");
                });

            modelBuilder.Entity("TripCostCalculator.Models.SubscriptionCarTypePrice", b =>
                {
                    b.HasOne("TripCostCalculator.Models.CarType", "CarType")
                        .WithMany("Prices")
                        .HasForeignKey("CarTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripCostCalculator.Models.Subscription", "Subscription")
                        .WithMany("Prices")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarType");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("TripCostCalculator.Models.CarType", b =>
                {
                    b.Navigation("Prices");
                });

            modelBuilder.Entity("TripCostCalculator.Models.Subscription", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
